  # TODO: Find out which verion to release
  # Same workflow for both minimal and ee
  # remove the old container image
  # start a container
  # checkout images, ansible-build-data repo
  # install podman
  # get setuptools, ansible-builder and fedora
  # need to build dependency, execution-environment.yml
  # update the ansible-core,fedora and ansible collections versions
  #
  # commit the changes in the main branch
  # run this action once
  # build the image with ansible-builder
  # run the eercheck

name: Release Ansible Base Execution Environment
on:
  workflow_dispatch:
    inputs:
      ansible-core-version:
        description: >-
          Release Version. Example: 11.1.0
        required: true
      ee-version:
        description: >-
          Base EE Release Version. Example: 1
        required: true
      tag:
        description: >-
          Whether to tag the image as latest.
        type: boolean
        required: false
        default: false

env:
  BASE_EE_VERSION: ${{ inputs.ansible-core-version }}-${{ inputs.ee-version }}

jobs:
  build:
    name: Build Base EE ${{ inputs.ansible-core-version }}-${{ inputs.ee-version }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Set the derived variable
        run: |
          echo "CI_COMMIT_MSG=\"Relasing the new excution environment image: ${{ env.BASE_EE_VERSION }}\"" >> $GITHUB_ENV #check if the Commit msg is correct or not

      - name: Check out ansible-build-data
        uses: actions/checkout@v4
        with:
          repository: ansible-community/ansible-build-data
          ref: main
          path: ansible-build-data


      - name: Check out images
        uses: actions/checkout@v4
        with:
          reposiroty: ansible-community/images
          ref: main
          path: images

      - name: Check out eercheck repo for testing
        uses: actions/checkout@v4
        with:
          reposiroty: anweshadas/eercheck
          ref: main

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python3 -m pip install ansible-builder
          python3 -m pip install setuptools
          apt install podman --yes

      - name: Pull the latest fedora image
        run: |
          podman pull fedora:latest

      - name: Build the Base Community EE image
        run: |
           ansible-builder build --tag ghcr.io/ansible-community/community-ee-base:${{ env.BASE_EE_VERSION }}

      - name: Find the id of the latest Base EE image
        run: |
          echo "IMAGE_ID=${podman images -q community-ee-base:${{ env.BASE_EE_VERSION }})" >> $GITHUB_ENV

      - name: Test the image with eercheck
        working-directory: >-
          eercheck
        run: >-
          python3 -m venv .venv
          source .venv/bin/activate
          python -m pip install -r requirements.txt
          systemctl start podman.socket --user
          ./containertest.py ${{ env.IMAGE_ID }}
          echo "STATUS_CODE=$?">>$GITHUB_ENV

      - name: Checking the status code
        run: |
          if test ${{ env.STATUS_CODE }}!= 0; then
            exit 1;
          fi

      - name: Create the latest tag
        if: ${{ inputs.tag }}
        run: |
          podman tag ${{ env.IMAGE_ID }} ghcr.io/ansible-community/community-ee-base:latest

      - name: Login to the Github Container registry
        env:
          REGISTRY_USER:
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # name: Upload artifact Base EE
        #run: |
          #podman push ghcr.io/ansible-community/community-ee-base:${{ env.BASE_EE_VERSION }}

      # name: Check and upload the image latest tag
        #if: ${{ inputs.tag }}
        #run: |
          #podman push ghcr.io/ansible-community/community-ee-base:latest
