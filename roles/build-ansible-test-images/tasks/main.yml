- name: Ensure dependencies are available
  include_tasks: pre-requirements.yml

- when: images_build | bool
  block:
    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
        suffix: .test
      register: remote_tmp_dir

    - name: Copy repository files to temporary directory
      ansible.builtin.copy:
        src: '{{ playbook_dir | dirname }}/ansible-test/'
        dest: '{{ remote_tmp_dir.path }}/ansible-test/'
        mode: preserve

    - name: Build ansible-test container image
      ansible.builtin.command:
        cmd: "{{ remote_tmp_dir.path }}/{{ item.script }} {{ item.name }}:{{ item.tag }}"
      loop: "{{ images_available }}"

  always:
    - name: Delete temporary directory
      file:
        path: "{{ remote_tmp_dir.path }}"
        state: absent
      no_log: yes

- name: Install ansible-test in a virtualenv
  include_tasks: install-ansible-test.yml

# TODO: This gets us started with simple testing but we should be able to iterate across
# a list of collections and test specified targets against specified versions of python
- name: Set path to community.general checkout
  ansible.builtin.set_fact:
    _community_general: "{{ ansible_user_dir }}/.ansible/tmp/src/ansible_collections/community/general"

- name: Retrieve community.general to test ansible-test with
  ansible.builtin.git:
    repo: "https://github.com/ansible-collections/community.general"
    dest: "{{ _community_general }}"
    depth: 1
    version: main

- name: Test the container images
  include_tasks: test-image.yml
  loop: "{{ images_available }}"

- name: List available images
  vars:
    _images: >-
      {% for image in images_available %}
      {{- image['name'] }}:{{ image['tag'] -}}{% if not loop.last %},{% endif %}
      {% endfor %}
  ansible.builtin.debug:
    msg: "The following images have been built and tested: {{ _images }}"
